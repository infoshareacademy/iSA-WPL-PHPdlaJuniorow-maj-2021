version: '3'

services:

  web:
    container_name: web-ifa
    build:
      context: .
      dockerfile: docker/nginx/Dockerfile
    ports:
      - "8080:80"
      - "8081:81"
      - "8082:82"
    volumes:
      - ./apps:/apps/
    links:
      - php
    networks:
      - my-proxy-net
  php:
    container_name: php-ifa
    build:
      context: .
      dockerfile: docker/php/Dockerfile
    environment:
      - DB_DRIVER=pgsql
      - DB_HOST=postgres
      - DB_PORT=5432
      - DB_USERNAME=root
      - DB_PASSWORD=root
      - DB_NAME_APP_ONE=appOne
      - DB_NAME_APP_TWO=appTwo
      - DB_NAME_APP_THREE=appThree
      - APP_ONE_HOST=web:80
      - APP_TWO_HOST=web:81
      - APP_THREE_HOST=web:82
      - docker=true
    volumes:
      - ./apps:/apps/
      - ./composer_cache:/var/www/.composer
    networks:
      - my-proxy-net
    healthcheck:
      test: [ "CMD", "curl", "-f", "http://localhost:5432" ]
      interval: 30s
      timeout: 10s
      retries: 5
    depends_on:
       - postgres

  postgres:
    container_name: postgres-ifa
    build:
      context: .
      dockerfile: docker/postgres/Dockerfile
    environment:
      - POSTGRES_PASSWORD=root
      - POSTGRES_USER=root
      - DB_NAME_APP_ONE=appOne
      - DB_NAME_APP_TWO=appTwo
      - DB_NAME_APP_THREE=appThree
    ports:
      - "5432:5432"
    networks:
      - my-proxy-net
    volumes:
    - ./postgres-data:/var/lib/postgresql/data
    - ./docker/postgres/create_db.sql:/docker-entrypoint-initdb.d/1_schema.sql


#  elastic:
#    image: docker.elastic.co/elasticsearch/elasticsearch:7.12.0
#    container_name: elastic
#    environment:
#      - node.name=elastic
#      - cluster.name=es-docker-cluster
#      - discovery.seed_hosts=es02,es03
#      - cluster.initial_master_nodes=elastic
#      - bootstrap.memory_lock=true
#      - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
#    ulimits:
#      memlock:
#        soft: -1
#        hard: -1
#    volumes:
#      - data01:/usr/share/elasticsearch/data
#    ports:
#      - 9200:9200
#    networks:
#      - my-proxy-net
#
#  kibana:
#    image: docker.elastic.co/kibana/kibana:7.12.0
#    container_name: kibana
#    ports:
#      - 5601:5601
#    environment:
#      ELASTICSEARCH_URL: http://elastic:9200
#      ELASTICSEARCH_HOSTS: '["http://elastic:9200"]'
#    networks:
#      - my-proxy-net

networks:
  my-proxy-net:
    external: true
    name: custom_network

#networks:
#  my-proxy-net:
#    external:
#      name: custom_network

volumes:
  data01:
    driver: local